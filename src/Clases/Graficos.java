package Clases;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Image;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

public class Graficos extends javax.swing.JFrame {

    String ruta = "src/IMG/white-gradient.jpg";
    ClaseMetodos cl = new ClaseMetodos();
    boolean bandera = false;
    DefaultTableModel modelo = new DefaultTableModel();
    int Maternal = 0, Parvulo = 0, Pre = 0, Jardin = 0, Trancision = 0;
    int Primero = 0, Segundo = 0, Tercero = 0, Cuarto = 0, Quinto = 0;

    public Graficos() {
        initComponents();

        setLocationRelativeTo(null);
        setTitle("Graficos.");

        ImageIcon FondoDePantalla = new ImageIcon(ruta);
        Icon icono = new ImageIcon(FondoDePantalla.getImage().getScaledInstance(Background.getWidth(),
                Background.getHeight(), Image.SCALE_DEFAULT));
        Background.setIcon(icono);
        this.repaint();

        int contador = 0;
        try {

            Alumnos.setModel(modelo);

            //coneccion con base de datos
            Connection on = ClaseMetodos.conectar();

            //esta linea de codigo le da las intrucciones a la base de datos
            PreparedStatement pst = on.prepareStatement("SELECT Nombres, Grado FROM alumnos");

            ResultSet rs = pst.executeQuery();

            //establecer nombres de columnas
            modelo.addColumn("NOMBRES");
            modelo.addColumn("GRADO");

            ResultSetMetaData rsMd = rs.getMetaData();
            int CantidadDeColumnas = rsMd.getColumnCount();
            String[] filas = new String[CantidadDeColumnas];
            while (rs.next()) {

                for (int i = 0; i < CantidadDeColumnas; i++) {
                    filas[i] = rs.getString(i + 1);
                    switch (filas[i]) {
                        case "Maternal":
                            Maternal++;
                            break;
                        case "Parvulo":
                            Parvulo++;
                            break;
                        case "Jardin":
                            Jardin++;
                            break;
                        case "Pre-Jardin":
                            Pre++;
                            break;
                        case "Trancision":
                            Trancision++;
                            break;
                        case "Primero":
                            Primero++;
                            break;
                        case "Segundo":
                            Segundo++;
                            break;
                        case "Tercero":
                            Tercero++;
                            break;
                        case "Cuarto":
                            Cuarto++;
                            break;
                        case "Quinto":
                            Quinto++;
                            break;
                        default:
                            break;
                    }
                }
                contador = contador + 1;
                modelo.addRow(filas);
            }

        } catch (SQLException e) {
            System.out.println(e);
        }
        
        //JOptionPane.showMessageDialog(null, "este es contador = " + contador);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Alumnos = new javax.swing.JTable();
        Background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Cooper Black", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("GRAFICOS.");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 30, 800, -1));

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione Grado", "Maternal", "Parvulo", "Pre-Jardin", "Jardin", "Trancision", "Primero", "Segundo", "Tercero", "Cuarto", "Quinto" }));
        jComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox1ItemStateChanged(evt);
            }
        });
        getContentPane().add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, 210, 35));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Generar Grafico.");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 130, -1, -1));

        jButton3.setText("x");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 40, 35));

        Alumnos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(Alumnos);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 200, 210, 280));
        getContentPane().add(Background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, 500));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        InterfazPrincipal i = new InterfazPrincipal();
        this.setVisible(false);
        i.setVisible(true);

    }//GEN-LAST:event_jButton3ActionPerformed

    private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox1ItemStateChanged
        // TODO add your handling code here:
        String query = jComboBox1.getSelectedItem().toString();
        
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(modelo);
        Alumnos.setRowSorter(tr);
        
        if(query != "Seleccione Grado"){
            tr.setRowFilter(RowFilter.regexFilter(query));
        }else{
            Alumnos.setRowSorter(tr);
            
        }
    }//GEN-LAST:event_jComboBox1ItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Graficos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Graficos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Graficos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Graficos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Graficos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Alumnos;
    private javax.swing.JLabel Background;
    private javax.swing.JButton jButton3;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    public void paint(Graphics g) {
        super.paint(g);
        if (bandera == true|| bandera==false) {

            int TotalAlumnos = Maternal + Parvulo + Pre + Jardin
                    + Trancision + Primero + Segundo + Tercero + Cuarto + Quinto;

            
            
            int Maternal_Grados = Maternal * 360 / TotalAlumnos;
            int Parvulo_Grados = Parvulo * 360 / TotalAlumnos;
            int Pre_Grados = Pre * 360 / TotalAlumnos;
            int Jardin_Grados = Jardin * 360 / TotalAlumnos;
            int Trancision_Grados = Trancision * 360 / TotalAlumnos;
            int Primero_Grados = Primero * 360 / TotalAlumnos;
            int Segundo_Grados = Segundo * 360 / TotalAlumnos;
            int Tercero_Grados = Tercero * 360 / TotalAlumnos;
            int Cuarto_Grados = Cuarto * 360 / TotalAlumnos;
            int Quinto_Grados = Quinto * 360 / TotalAlumnos;

            g.setColor(Color.red);
            g.fillArc(325, 120, 300, 300, 0, Maternal_Grados);
            g.fillRect(650, 120, 15, 15);
            g.drawString("Maternal", 675, 135);

            g.setColor(Color.blue);
            g.fillArc(325, 120, 300, 300, Maternal_Grados, Parvulo_Grados);
            g.fillRect(650, 150, 15, 15);
            g.drawString("Parvulo", 675, 165);

            g.setColor(Color.GREEN);
            g.fillArc(325, 120, 300, 300, Parvulo_Grados + Maternal_Grados, Pre_Grados);
            g.fillRect(650, 180, 15, 15);
            g.drawString("Pre-Jardin", 675, 195);

            g.setColor(Color.YELLOW);
            g.fillArc(325, 120, 300, 300, Pre_Grados + Parvulo_Grados + Maternal_Grados, Jardin_Grados);
            g.fillRect(650, 210, 15, 15);
            g.drawString("Jardin", 675, 225);

            g.setColor(Color.PINK);
            g.fillArc(325, 120, 300, 300, Jardin_Grados + Pre_Grados + Parvulo_Grados
                    + Maternal_Grados, Trancision_Grados);
            g.fillRect(650, 240, 15, 15);
            g.drawString("Trancision", 675, 255);

            g.setColor(Color.BLACK);
            g.fillArc(325, 120, 300, 300, Trancision_Grados + Jardin_Grados
                    + Pre_Grados + Parvulo_Grados + Maternal_Grados, Primero_Grados);
            g.fillRect(650, 270, 15, 15);
            g.drawString("Primero", 675, 285);

            g.setColor(Color.ORANGE);
            g.fillArc(325, 120, 300, 300, Primero_Grados + Trancision_Grados
                    + Jardin_Grados + Pre_Grados + Parvulo_Grados + Maternal_Grados, Segundo_Grados);
            g.fillRect(650, 300, 15, 15);
            g.drawString("Segundo", 675, 315);

            g.setColor(Color.gray);
            g.fillArc(325, 120, 300, 300, Segundo_Grados + Primero_Grados
                    + Trancision_Grados + Jardin_Grados + Pre_Grados + Parvulo_Grados
                    + Maternal_Grados, Tercero_Grados);
            g.fillRect(650, 330, 15, 15);
            g.drawString("Tercero", 675, 345);

            g.setColor(Color.magenta);
            g.fillArc(325, 120, 300, 300, Tercero_Grados + Segundo_Grados
                    + Primero_Grados + Trancision_Grados + Jardin_Grados + Pre_Grados
                    + Parvulo_Grados + Maternal_Grados, Cuarto_Grados);
            g.fillRect(650, 360, 15, 15);
            g.drawString("Cuarto", 675, 375);

            g.setColor(Color.darkGray);
            g.fillArc(325, 120, 300, 300, Cuarto_Grados + Tercero_Grados
                    + Segundo_Grados + Primero_Grados + Trancision_Grados + Jardin_Grados
                    + Pre_Grados + Parvulo_Grados + Maternal_Grados, Quinto_Grados+1);
            g.fillRect(650, 390, 15, 15);
            g.drawString("Quinto", 675, 405);
        }
    }
}
