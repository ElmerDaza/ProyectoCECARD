/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Clases;

//import static Clases.ClaseMetodos.conectar;
import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Chunk;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Font;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.HeadlessException;
import java.awt.Image;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.math.BigDecimal;
import java.math.RoundingMode;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.Calendar;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import java.text.DecimalFormat;

public class ContinuarPago extends javax.swing.JFrame {

    String ruta = "src/IMG/fondoblanco.jpg", Title;
    int cantFila = 6, contador = 0, cant = 0;
    int va  = 0;
    double matricula_pagada = 0;
    String f[] = new String[cantFila], ob[] = new String[cantFila], saldo;
    ClaseMetodos c = new ClaseMetodos();
    RegistrarPagoDeMatricula ce = new RegistrarPagoDeMatricula();
    SeleccionDePago sp = new SeleccionDePago();
    Metodos m = new Metodos();
    boolean bandera = false;
    int paso = c.pasar;

    public ContinuarPago() {

        initComponents();
        this.setBounds(0, 0, 850, 530);
        Title = ce.Title;
        Datos();
        setLocationRelativeTo(null);
        setTitle("Registrar Pago De " + Title);
        jLabel4.setText("VALOR A PAGAR " + Title.toUpperCase());
        jLabel1.setText("REGISTRAR PAGO DE " + Title.toUpperCase());

        ImageIcon FondoDePantalla = new ImageIcon(ruta);
        Icon icono = new ImageIcon(FondoDePantalla.getImage().getScaledInstance(Background.getWidth(),
                Background.getHeight(), Image.SCALE_DEFAULT));
        Background.setIcon(icono);
        this.repaint();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        NombrePago = new javax.swing.JTextField();
        Valor = new javax.swing.JTextField();
        IdentificacionPago = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        Concepto = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        Finalizar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        Edad = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        Apellidos = new javax.swing.JLabel();
        Nombre = new javax.swing.JLabel();
        edad = new javax.swing.JLabel();
        Grado = new javax.swing.JLabel();
        id = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        Background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Cooper Black", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(251, 249, 250));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("REGISTRAR PAGO DE PENSION.");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 20, 850, -1));

        NombrePago.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                soloLetras(evt);
            }
        });
        getContentPane().add(NombrePago, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 340, 240, 30));

        Valor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                soloNumeros(evt);
            }
        });
        getContentPane().add(Valor, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 290, 200, 30));

        IdentificacionPago.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                soloNumeros(evt);
            }
        });
        getContentPane().add(IdentificacionPago, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 370, 200, 30));

        Concepto.setColumns(20);
        Concepto.setRows(5);
        jScrollPane1.setViewportView(Concepto);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 340, 220, 120));

        jButton1.setText("CANCELAR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 440, 100, 30));

        Finalizar.setText("FINALIZAR");
        Finalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FinalizarActionPerformed(evt);
            }
        });
        getContentPane().add(Finalizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 440, 100, 30));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(251, 249, 250));
        jLabel2.setText("NONBRE.");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 100, -1, 30));

        Edad.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Edad.setForeground(new java.awt.Color(251, 249, 250));
        Edad.setText("EDAD.");
        getContentPane().add(Edad, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 100, 77, 30));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(251, 249, 250));
        jLabel4.setText("VALOR A PAGAR PENSION");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 100, 220, 30));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(251, 249, 250));
        jLabel3.setText("GRADO .");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(376, 100, 76, 30));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(251, 249, 250));
        jLabel7.setText("INGRESE VALOR:");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 268, 114, 21));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(251, 249, 250));
        jLabel5.setText("NOMBRE DE QUIEN REALIZA EL PAGO :");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 310, -1, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(251, 249, 250));
        jLabel6.setText("IDENTIFICACIÃ“N.");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 190, 140, -1));
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 140, 170, -1));

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(251, 249, 250));
        jLabel11.setText("IDENTIFICACION:");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 350, 110, -1));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(251, 249, 250));
        jLabel9.setText("CONCEPTO:");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 310, -1, -1));
        getContentPane().add(Apellidos, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 130, -1, -1));
        getContentPane().add(Nombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 150, -1, -1));
        getContentPane().add(edad, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 140, -1, -1));
        getContentPane().add(Grado, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 140, -1, -1));

        id.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        getContentPane().add(id, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 190, 100, -1));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(251, 249, 250));
        jLabel10.setText("Noviembre");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(764, 265, -1, -1));

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(251, 249, 250));
        jLabel12.setText("Febrero");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 265, -1, -1));

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(251, 249, 250));
        jLabel13.setText("Junio");
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 265, -1, -1));
        getContentPane().add(Background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 850, 530));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        //InterfazPrincipal i = new InterfazPrincipal();
        SeleccionDePago s = new SeleccionDePago();

        ce.setVisible(false);
        s.setVisible(true);

        this.setVisible(false);
        //i.setVisible(true);


    }//GEN-LAST:event_jButton1ActionPerformed

    private void FinalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FinalizarActionPerformed
        // TODO add your handling code here:

        int Validacion = 0;
        contador = 0;

        Calendar fecha = Calendar.getInstance();
        int aÃ±o = fecha.get(Calendar.YEAR);
        int dia = fecha.get(Calendar.DAY_OF_MONTH);
        int mes = fecha.get(Calendar.MONTH);
        int hora = fecha.get(Calendar.HOUR_OF_DAY);
        int min = fecha.get(Calendar.MINUTE);
        String day = c.DiaEnLetras(dia);
        String Mes = c.MesEnLetras(mes);
        String fechaS = dia + "-" + Mes + "-" + aÃ±o + "-" + hora + "_" + min;

        f[0] = NombrePago.getText().trim();
        f[1] = IdentificacionPago.getText().trim();
        f[2] = Valor.getText().trim();
        f[3] = Concepto.getText().trim();
        f[4] = id.getText().trim();

        if ("".equals(f[0])) {
            NombrePago.setBackground(Color.red);
            Validacion++;

        }
        if ("".equals(f[1])) {
            IdentificacionPago.setBackground(Color.red);
            Validacion++;
        }

        if ("".equals(f[2])) {
            Valor.setBackground(Color.red);
            Validacion++;
        }

        if ("".equals(f[3])) {
            Concepto.setBackground(Color.red);
            Validacion++;
        }
        if (Validacion != 0) {
            JOptionPane.showMessageDialog(null,
                    "Todos los campos son obligatorios, por favor llenar todas los campos.");
        }

        if (paso == 1) {
            try {

                //en las segundas comillas va el usuario de mysql y en las terceras va la contraseÃ±a.
                Connection on = ClaseMetodos.conectar();

                //esta linea de codigo le da las intrucciones a la base de datos
                PreparedStatement pst = on.prepareStatement("SELECT Fecha, Ingreso, Egreso, Saldo FROM contavilidad");
                ResultSet rs = pst.executeQuery();
                ResultSetMetaData rsMd = rs.getMetaData();
                int CantidadDeColumnas = rsMd.getColumnCount();
                cantFila = CantidadDeColumnas;

                while (rs.next()) {
                    for (int i = 0; i < CantidadDeColumnas; i++) {
                        ob[i] = rs.getString(i + 1);
                    }

                    contador = contador + 1;
                }

                if (Validacion == 0) {

                    pst = on.prepareStatement("select * from contavilidad where ID_Contabilidad =" + contador);

                    rs = pst.executeQuery();

                    if (rs.next()) {
                        saldo = (rs.getString("Saldo"));
                    }

                    System.out.println("este es contador en 1: " + contador);
                    try {
                        try (Connection cn = ClaseMetodos.conectar()) {
                            PreparedStatement pst2 = cn.prepareStatement("insert into contavilidad values "
                                    + "(?,?,?, ?,?,?, ?,?,?)");
                            pst2.setInt(1, 0);
                            pst2.setString(2, fechaS);
                            pst2.setString(3, f[3]);
                            pst2.setString(4, f[2]);
                            pst2.setString(5, "");
                            if (contador == 0) {
                                saldo = "0";
                            }
                            int sald = Integer.parseInt(saldo.trim());
                            int pagado = Integer.parseInt(f[2]);
                            sald = sald + pagado;
                            saldo = Integer.toString(sald);

                            pst2.setString(6, saldo);
                            pst2.setString(7, f[0]);
                            pst2.setString(8, f[1]);
                            String nombre = Nombre.getText();
                            pst2.setString(9, nombre);

                            pst2.executeUpdate();

                            on.close();

                        }

                    } catch (SQLException e) {
                        Validacion++;

                        System.err.println("error al registrar alumno " + e);
                        JOptionPane.showMessageDialog(null, "Error en el sistema contacte con el administrador.");
                    }

                    try {

                        DecimalFormat df = new DecimalFormat("#.000");
                        //System.out.println("este es f2 " + f[2]);
                        int ma = va;
                        double matr = ma;
                        double matrPagada = Integer.parseInt(f[2]);
                        BigDecimal bd = new BigDecimal(matrPagada);
                        String otro = df.format(matrPagada);

                        bd = bd.multiply(new BigDecimal("100"));

                        bd = bd.divide(new BigDecimal(ma), cantFila, RoundingMode.CEILING);
                        //System.out.println("este es resultado "+bd);

                        bd = bd.add(new BigDecimal(matricula_pagada));
                        //System.out.println("este es resultado " + bd);

                        double es = bd.doubleValue();
                        //System.out.println("este es es: "+es);
                        if (es != 0) {
                            Connection cn = ClaseMetodos.conectar();
                            PreparedStatement pst3 = cn.prepareStatement(
                                    "update alumnos set Matricula_Pagada = ? WHERE Documento = '" + f[4] + "'");
                            pst3.setDouble(1, es);
                            pst3.executeUpdate();

                        }

                    } catch (SQLException e) {
                        System.err.println(
                                "error al registrar alumno en la base de datos modificando matricula_pagada " + e);
                        JOptionPane.showMessageDialog(null, "Error en el sisteme contacte por favor con el administrador.");

                    }

                    try {
                        //esta linea crea un documento en blanco
                        com.itextpdf.text.Document documento = new com.itextpdf.text.Document();
                        //codigo ruta de ingreso al sistema
                        String ruta = System.getProperty("user.home");
                        //codigo ruta y nombre del documento sin olvidar la extencion
                        PdfWriter.getInstance(documento, new FileOutputStream(ruta
                                + "/Documents/PrimerosProgramasEnNetBeans/ProyectoCECARD2000"
                                + "/documentosPDF/Conprobante_Pago" + Title + "_" + fechaS + ".pdf"));

                        com.itextpdf.text.Image escudo;
                        escudo = com.itextpdf.text.Image.getInstance("src/IMG/encabezado.PNG");
                        escudo.scaleToFit(850, 90);
                        escudo.setAlignment(Chunk.ANCHOR);

                        //este codigo introduce texto o un parrafo dentro del documento
                        Paragraph cuerpo = new Paragraph();
                        Paragraph parrafo = new Paragraph();
                        Paragraph celda = new Paragraph();
                        //parrafo.setAlignment(Paragraph.ALIGN_CENTER);

                        //este codigo especifica tipo y tamaÃ±o de letra
                        cuerpo.add(escudo);
                        cuerpo.setFont(FontFactory.getFont("Arial", 12, Font.BOLD, BaseColor.BLACK));
                        cuerpo.setAlignment(Paragraph.ALIGN_CENTER);
                        cuerpo.add("EL CENTRO EDUCATIVO CRISTIANO EL AMOR RESTAURADOR DE DIOS\n");
                        cuerpo.setAlignment(Paragraph.ALIGN_CENTER);
                        cuerpo.add("NIT 900870840-7\n\n\n\n");
                        cuerpo.setFont(FontFactory.getFont("Arial", 12, Font.NORMAL, BaseColor.BLACK));
                        cuerpo.add("HACE CONSTAR QUE\n\n\n");

                        
                        
                        
                        
                        //codigo para crear tabla especificando cuantas columnas se utilizaran
                        PdfPTable tabla = new PdfPTable(4);

                        /*  OpciÃ³n 2: define un ancho absoluto.

            Suponga que se le pide que cree una tabla con un ancho de 4 pulgadas.
            Por defecto, 1 pulgada es 72 unidades de usuario, por lo que necesita 
            una tabla de 288 unidades de usuario.

            Esto se puede lograr asÃ­:


            PdfPTable table = new PdfPTable(2);
            table.setTotalWidth(288);
            table.setLockedWidth(true);
            
            Si olvida la lÃ­nea table.setLockedWidth(true);, iText asumirÃ¡ que desea que iText calcule 
            el ancho en funciÃ³n del porcentaje de ancho (predeterminado) y el ancho disponible. 
            Al bloquear el ancho, iText cambia para usar el ancho total como un ancho absoluto.*/
                        // determina el porcentage a ocupar del ancho del documento.
                        tabla.setWidthPercentage(100);
                        //tabla.addCell("Codigo");
                        // addCell() agrega una celda a la tabla, el cambio de fila
                        // ocurre automaticamente al llenar la fila
                        tabla.addCell("Celda 1");
                        celda.setFont(FontFactory.getFont("Arial", 18, Font.BOLD, BaseColor.BLACK));
                        celda.setAlignment(Paragraph.ALIGN_CENTER);
                        celda.add("\n          COMPROBANTE DE PAGO.\n\n");
                        PdfPCell celda2 = new PdfPCell(celda);
                        celda2.setColspan(3);
                        tabla.addCell(celda2);

                        Paragraph fec = new Paragraph();
                        fec.setFont(FontFactory.getFont("Arial", 10, Font.BOLD, BaseColor.BLACK));
                        fec.add("FECHA: " + dia + "-" + Mes + "-" + aÃ±o + "-" + hora + ":" + min);
                        tabla.addCell(fec);

                        Paragraph celdatres = new Paragraph();
                        celdatres.setFont(FontFactory.getFont("Arial", 12, Font.BOLD, BaseColor.BLACK));
                        celdatres.add("\n\n             Concepto: Pago de " + Title + "\n\n\n");
                        PdfPCell celda3 = new PdfPCell(celdatres);
                        celda3.setColspan(2);
                        tabla.addCell(celda3);
                        tabla.addCell("No. 000" + hora + min);

                        Paragraph celdacuatro = new Paragraph();
                        celdacuatro.setFont(FontFactory.getFont("Lucida", 12, Font.NORMAL, BaseColor.BLACK));
                        celdacuatro.add("\n\n"
                                + "CIUDAD.............. Riohacha.\n\n"
                                + "FECHA............... " + dia + " - " + Mes + " - " + aÃ±o + " - " + hora + ":" + min + "\n\n"
                                + "VALOR............... " + Valor.getText() + "\n\n"
                                + "CONCEPTO............ " + Concepto.getText() + "\n\n"
                                + "NOMBRE.............. " + NombrePago.getText() + "\n\n"
                                + "DOCUMENTO........... No " + IdentificacionPago.getText() + "\n\n\n");
                        PdfPCell celda4 = new PdfPCell(celdacuatro);
                        celda4.setColspan(4);
                        tabla.addCell(celda4);

                        int pago = Integer.parseInt(Valor.getText());
                        String def = "";
                        if (c.porpagar == pago) {
                            def = "Pago";
                        } else {
                            def = "Abono";
                        }

                        tabla.addCell("PAGO/ABONO. \n\n"
                                + def + "\n");
                        tabla.addCell("MONEDA. \n\n Peso colombiano.\n");
                        tabla.addCell("VALOR. \n\n" + f[2]);
                        tabla.addCell("NOTA. ");

                        Paragraph celdacinco = new Paragraph();
                        celdacinco.setFont(FontFactory.getFont("Arial", 12, Font.BOLD, BaseColor.BLACK));
                        celdacinco.add("\n\nCECARD Rioacha cede principal \n"
                                + "Aprobado y verificado por el representante legal.");
                        PdfPCell celda5 = new PdfPCell(celdacinco);
                        celda5.setColspan(3);
                        tabla.addCell(celda5);
                        tabla.addCell("Total.");

                        // Si desea crear una celda de mas de una columna
                        // Cree un objecto Cell y cambie su propiedad span
                        //PdfPCell celdaFinal = new PdfPCell(new Paragraph("Final de la tabla"));
                        // Indicamos cuantas columnas ocupa la celda
                        //celdaFinal.setColspan(3);
                        //tabla.addCell(celdaFinal);
                        documento.open();
                        documento.add(cuerpo);
                        documento.add(parrafo);
                        documento.add(tabla);
                        documento.close();

                        JOptionPane.showMessageDialog(null, "reporte creado con exito\n"
                                + "en " + ruta);
                        /*Nombre.setText("");
            Apellido.setText("");
            Edad.setText("");
            ID.setText("");
            Grado.setText("");*/

                        //codigo para crear tabla especificando cuantas columnas se utilizaran
                        /*PdfPTable tabla = new PdfPTable(3);
            tabla.addCell("Codigo");
            tabla.addCell("Nombre");
            tabla.addCell("Grupo");

            
            try {
                Connection on = DriverManager.getConnection("jdbc:mysql://localhost/prueba", "root", "");

                //en esta linea se especifica que deve seleccionar toda la tabla llamada listado.
                PreparedStatement pst = on.prepareStatement("select * from listado");
                //ejecutar las 2 lineas anteriores.
                ResultSet rs = pst.executeQuery();

                if (rs.next()) {
                    do {
                        tabla.addCell(rs.getString(1));
                        tabla.addCell(rs.getString(2));
                        tabla.addCell(rs.getString(3));
                    } while (rs.next());
                    documento.add(tabla);

                }
            } catch (DocumentException | SQLException e) {

                System.out.println("3" + e);
            }
                         */
                        //java.io.FileNotFoundException
                    } catch (DocumentException | HeadlessException | FileNotFoundException e) {

                        System.out.println("2" + e);
                    } catch (IOException e) {
                        System.out.println("1" + e);
                    }

                    JOptionPane.showMessageDialog(null, "Registro de ingreso exitoso.");
                    ce.setVisible(false);
                    sp.setVisible(true);
                    this.setVisible(false);

                }

            } catch (SQLException e) {
                Validacion++;
                System.err.println("error en la conexion co la base de datos." + e);

                JOptionPane.showMessageDialog(null,
                        "Error al contactar con la base de datos, por favor comuniquese con el administrador.");
            }
        } else if (paso == 2) {

            try {

                //en las segundas comillas va el usuario de mysql y en las terceras va la contraseÃ±a.
                Connection on = ClaseMetodos.conectar();

                //esta linea de codigo le da las intrucciones a la base de datos
                PreparedStatement pst = on.prepareStatement("SELECT Fecha, Ingreso, Egreso, Saldo FROM contavilidad");
                ResultSet rs = pst.executeQuery();
                ResultSetMetaData rsMd = rs.getMetaData();
                int CantidadDeColumnas = rsMd.getColumnCount();
                cantFila = CantidadDeColumnas;

                while (rs.next()) {
                    for (int i = 0; i < CantidadDeColumnas; i++) {
                        ob[i] = rs.getString(i + 1);
                    }

                    contador = contador + 1;
                }

                if (Validacion == 0) {

                    pst = on.prepareStatement("select * from contavilidad where ID_Contabilidad =" + contador);

                    rs = pst.executeQuery();

                    if (rs.next()) {
                        saldo = (rs.getString("Saldo"));
                    }

                    System.out.println("este es contador en 2:" + contador);
                    try {
                        try (Connection cn = ClaseMetodos.conectar()) {
                            PreparedStatement pst2 = cn.prepareStatement("insert into contavilidad values "
                                    + "(?,?,?, ?,?,?, ?,?,?)");
                            pst2.setInt(1, 0);
                            pst2.setString(2, fechaS);
                            pst2.setString(3, f[3]);
                            pst2.setString(4, f[2]);
                            pst2.setString(5, "");
                            if (contador == 0) {
                                saldo = "0";
                            }
                            int sald = Integer.parseInt(saldo.trim());
                            int pagado = Integer.parseInt(f[2]);
                            sald = sald + pagado;
                            saldo = Integer.toString(sald);

                            pst2.setString(6, saldo);
                            pst2.setString(7, f[0]);
                            pst2.setString(8, f[1]);
                            String nombre = Nombre.getText();
                            pst2.setString(9, nombre);

                            pst2.executeUpdate();

                            on.close();

                        }

                    } catch (SQLException e) {
                        Validacion++;

                        System.err.println("error al registrar alumno " + e);
                        JOptionPane.showMessageDialog(null, "Error en el sisteme contacte con el administrador.");
                    }

                    try {
                        System.out.println("este es matricula_pagada " + matricula_pagada);
                        BigDecimal ValorUnAÃ±o = new BigDecimal(va);
                        ValorUnAÃ±o = ValorUnAÃ±o.multiply(new BigDecimal("10"));
                        //System.out.println("este es f2 " + f[2]);
                        int ma = va;
                        double matr = ma;
                        double matrPagada = Integer.parseInt(f[2]);
                        BigDecimal bd = new BigDecimal(matrPagada);

                        bd = bd.multiply(new BigDecimal("100"));

                        bd = bd.divide(ValorUnAÃ±o, cantFila, RoundingMode.CEILING);
                        //System.out.println("este es resultado "+bd);

                        bd = bd.add(new BigDecimal(matricula_pagada));
                        //System.out.println("este es resultado " + bd);

                        double es = bd.doubleValue();
                        //System.out.println("este es es: "+es);
                        if (es != 0) {
                            Connection cn = ClaseMetodos.conectar();
                            PreparedStatement pst3 = cn.prepareStatement(
                                    "update alumnos set Pension_Pagada = ? WHERE Documento = '" + f[4] + "'");
                            pst3.setDouble(1, es);
                            pst3.executeUpdate();

                        }

                    } catch (SQLException e) {
                        System.err.println(
                                "error al registrar alumno en la base de datos modificando matricula_pagada " + e);
                        JOptionPane.showMessageDialog(null, "Error en el sisteme contacte por favor con el administrador.");

                    }

                    try {
                        com.itextpdf.text.Document documento = new com.itextpdf.text.Document();
                        //codigo ruta de ingreso al sistema
                        String ruta = System.getProperty("user.home");
                        //codigo ruta y nombre del documento sin olvidar la extencion
                        PdfWriter.getInstance(documento, new FileOutputStream(ruta
                                + "/Documents/PrimerosProgramasEnNetBeans/ProyectoCECARD2000"
                                + "/documentosPDF/Conprobante_Pago" + Title + "_" + fechaS + ".pdf"));

                        com.itextpdf.text.Image escudo;
                        escudo = com.itextpdf.text.Image.getInstance("src/IMG/encabezado.PNG");
                        escudo.scaleToFit(850, 90);
                        escudo.setAlignment(Chunk.ANCHOR);

                        //este codigo introduce texto o un parrafo dentro del documento
                        Paragraph cuerpo = new Paragraph();
                        Paragraph parrafo = new Paragraph();
                        Paragraph celda = new Paragraph();
                        //parrafo.setAlignment(Paragraph.ALIGN_CENTER);

                        //este codigo especifica tipo y tamaÃ±o de letra
                        cuerpo.add(escudo);
                        cuerpo.setFont(FontFactory.getFont("Arial", 12, Font.BOLD, BaseColor.BLACK));
                        cuerpo.setAlignment(Paragraph.ALIGN_CENTER);
                        cuerpo.add("EL CENTRO EDUCATIVO CRISTIANO EL AMOR RESTAURADOR DE DIOS\n");
                        cuerpo.setAlignment(Paragraph.ALIGN_CENTER);
                        cuerpo.add("NIT 900870840-7\n\n\n\n");
                        cuerpo.setFont(FontFactory.getFont("Arial", 12, Font.NORMAL, BaseColor.BLACK));
                        cuerpo.add("HACE CONSTAR QUE\n\n\n");

                        //codigo para crear tabla especificando cuantas columnas se utilizaran
                        PdfPTable tabla = new PdfPTable(4);

                        /*  OpciÃ³n 2: define un ancho absoluto.

            Suponga que se le pide que cree una tabla con un ancho de 4 pulgadas.
            Por defecto, 1 pulgada es 72 unidades de usuario, por lo que necesita 
            una tabla de 288 unidades de usuario.

            Esto se puede lograr asÃ­:


            PdfPTable table = new PdfPTable(2);
            table.setTotalWidth(288);
            table.setLockedWidth(true);
            
            Si olvida la lÃ­nea table.setLockedWidth(true);, iText asumirÃ¡ que desea que iText calcule 
            el ancho en funciÃ³n del porcentaje de ancho (predeterminado) y el ancho disponible. 
            Al bloquear el ancho, iText cambia para usar el ancho total como un ancho absoluto.*/
                        // determina el porcentage a ocupar del ancho del documento.
                        tabla.setWidthPercentage(100);
                        //tabla.addCell("Codigo");
                        // addCell() agrega una celda a la tabla, el cambio de fila
                        // ocurre automaticamente al llenar la fila
                        tabla.addCell("Celda 1");
                        celda.setFont(FontFactory.getFont("Arial", 18, Font.BOLD, BaseColor.BLACK));
                        celda.setAlignment(Paragraph.ALIGN_CENTER);
                        celda.add("\n          COMPROBANTE DE PAGO.\n\n");
                        PdfPCell celda2 = new PdfPCell(celda);
                        celda2.setColspan(3);
                        tabla.addCell(celda2);

                        Paragraph fec = new Paragraph();
                        fec.setFont(FontFactory.getFont("Arial", 10, Font.BOLD, BaseColor.BLACK));
                        fec.add("FECHA: " + dia + "-" + Mes + "-" + aÃ±o + "-" + hora + ":" + min);
                        tabla.addCell(fec);

                        Paragraph celdatres = new Paragraph();
                        celdatres.setFont(FontFactory.getFont("Arial", 12, Font.BOLD, BaseColor.BLACK));
                        celdatres.add("\n\n             Concepto: Pago de " + Title + "\n\n\n");
                        PdfPCell celda3 = new PdfPCell(celdatres);
                        celda3.setColspan(2);
                        tabla.addCell(celda3);
                        tabla.addCell("No. 000" + hora + min);

                        Paragraph celdacuatro = new Paragraph();
                        celdacuatro.setFont(FontFactory.getFont("Lucida", 12, Font.NORMAL, BaseColor.BLACK));
                        celdacuatro.add("\n\n"
                                + "CIUDAD.............. Riohacha.\n\n"
                                + "FECHA............... " + dia + " - " + Mes + " - " + aÃ±o + " - " + hora + ":" + min + "\n\n"
                                + "VALOR............... " + Valor.getText() + "\n\n"
                                + "CONCEPTO............ " + Concepto.getText() + "\n\n"
                                + "NOMBRE.............. " + NombrePago.getText() + "\n\n"
                                + "DOCUMENTO........... No " + IdentificacionPago.getText() + "\n\n\n");
                        PdfPCell celda4 = new PdfPCell(celdacuatro);
                        celda4.setColspan(4);
                        tabla.addCell(celda4);

                        int pago = Integer.parseInt(Valor.getText());
                        String def = "";
                        if (c.porpagar == pago) {
                            def = "Pago";
                        } else {
                            def = "Abono";
                        }

                        tabla.addCell("PAGO/ABONO. \n\n"
                                + def + "\n");
                        tabla.addCell("MONEDA. \n\n Peso colombiano.\n");
                        tabla.addCell("VALOR. \n\n" + f[2]);
                        tabla.addCell("NOTA. ");

                        Paragraph celdacinco = new Paragraph();
                        celdacinco.setFont(FontFactory.getFont("Arial", 12, Font.BOLD, BaseColor.BLACK));
                        celdacinco.add("\n\nCECARD Rioacha cede principal \n"
                                + "Aprobado y verificado por el representante legal.");
                        PdfPCell celda5 = new PdfPCell(celdacinco);
                        celda5.setColspan(3);
                        tabla.addCell(celda5);
                        tabla.addCell("Total.");

                        // Si desea crear una celda de mas de una columna
                        // Cree un objecto Cell y cambie su propiedad span
                        //PdfPCell celdaFinal = new PdfPCell(new Paragraph("Final de la tabla"));
                        // Indicamos cuantas columnas ocupa la celda
                        //celdaFinal.setColspan(3);
                        //tabla.addCell(celdaFinal);
                        documento.open();
                        documento.add(cuerpo);
                        documento.add(parrafo);
                        documento.add(tabla);
                        documento.close();

                        JOptionPane.showMessageDialog(null, "reporte creado con exito\n"
                                + "en " + ruta);
                        /*Nombre.setText("");
            Apellido.setText("");
            Edad.setText("");
            ID.setText("");
            Grado.setText("");*/

                        //codigo para crear tabla especificando cuantas columnas se utilizaran
                        /*PdfPTable tabla = new PdfPTable(3);
            tabla.addCell("Codigo");
            tabla.addCell("Nombre");
            tabla.addCell("Grupo");

            
            try {
                Connection on = DriverManager.getConnection("jdbc:mysql://localhost/prueba", "root", "");

                //en esta linea se especifica que deve seleccionar toda la tabla llamada listado.
                PreparedStatement pst = on.prepareStatement("select * from listado");
                //ejecutar las 2 lineas anteriores.
                ResultSet rs = pst.executeQuery();

                if (rs.next()) {
                    do {
                        tabla.addCell(rs.getString(1));
                        tabla.addCell(rs.getString(2));
                        tabla.addCell(rs.getString(3));
                    } while (rs.next());
                    documento.add(tabla);

                }
            } catch (DocumentException | SQLException e) {

                System.out.println("3" + e);
            }
                         */
                        //java.io.FileNotFoundException
                    } catch (DocumentException | HeadlessException | FileNotFoundException e) {

                        System.out.println("2" + e);
                    } catch (IOException e) {
                        System.out.println("1" + e);
                    }
                    JOptionPane.showMessageDialog(null, "Registro de ingreso exitoso.");

                    sp.setVisible(true);
                    ce.setVisible(false);
                    this.setVisible(false);

                }

            } catch (SQLException e) {
                Validacion++;
                System.err.println("error en la conexion co la base de datos." + e);

                JOptionPane.showMessageDialog(null,
                        "Error al contactar con la base de datos, por favor comuniquese con el administrador del sistema.");
            }

        }

    }//GEN-LAST:event_FinalizarActionPerformed

    private void soloNumeros(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_soloNumeros
        // TODO add your handling code here:
        m.SoloNumeros(evt);

    }//GEN-LAST:event_soloNumeros

    private void soloLetras(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_soloLetras
        // TODO add your handling code here:
        m.SoloLetras(evt);
    }//GEN-LAST:event_soloLetras

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ContinuarPago.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ContinuarPago.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ContinuarPago.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ContinuarPago.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ContinuarPago().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Apellidos;
    private javax.swing.JLabel Background;
    private javax.swing.JTextArea Concepto;
    private javax.swing.JLabel Edad;
    private javax.swing.JButton Finalizar;
    private javax.swing.JLabel Grado;
    private javax.swing.JTextField IdentificacionPago;
    private javax.swing.JLabel Nombre;
    private javax.swing.JTextField NombrePago;
    private javax.swing.JTextField Valor;
    private javax.swing.JLabel edad;
    private javax.swing.JLabel id;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    void Datos() {
        jLabel8.setText("" + c.porpagar);
        Apellidos.setText(c.d[0]);
        //System.out.println("este es apellidos "+Apellidos.getText()+" y "+c.d[0]);
        Nombre.setText(c.d[1]);
        id.setText(c.d[2]);
        va  = c.va;
        edad.setText(c.d[3]);
        Grado.setText(c.d[4]);
        matricula_pagada = c.matricula_pagada;
    }

    public void paint(Graphics g) {
        super.paint(g);
        bandera = true;
        if (bandera == true) {
            g.setColor(Color.RED);
            g.drawRect(570, 195, 220, 35);

            g.drawLine(570, 225, 570, 245);
            g.drawLine(592, 225, 592, 255);
            g.drawLine(614, 225, 614, 245);
            g.drawLine(636, 225, 636, 245);
            g.drawLine(658, 225, 658, 245);
            g.drawLine(680, 225, 680, 255);
            g.drawLine(702, 225, 702, 245);
            g.drawLine(724, 225, 724, 245);
            g.drawLine(746, 225, 746, 245);
            g.drawLine(768, 225, 768, 245);
            g.drawLine(790, 225, 790, 255);

            if (paso == 1) {
                jLabel10.setVisible(false);
                jLabel12.setVisible(false);
                jLabel13.setVisible(false);

            }

            if (matricula_pagada != 0) {
                BigDecimal largo = new BigDecimal(matricula_pagada);
                largo = largo.multiply(new BigDecimal("220"));
                largo = largo.divide(new BigDecimal("100"), cantFila, RoundingMode.CEILING);

                int tamaÃ±o = largo.intValue();
                g.setColor(Color.ORANGE);
                g.fillRect(570, 200, tamaÃ±o, 20);
            }
        }
    }

}
